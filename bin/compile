#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

# fail fast
set -e

BP_DIR=$(cd $(dirname $0)/..; pwd) # absolute path
BIN_DIR=$BP_DIR/bin
OPT_DIR=$BP_DIR/opt

# parse args
BUILD_DIR=$(cd $1; pwd)
CACHE_DIR=$2

curl --silent --location http://heroku-jvm-common.s3.amazonaws.com/jvm-buildpack-common.tar.gz | tar xz
. bin/java

if [ -f ${CACHE_DIR}/system.properties ] && [ ! -f ${BUILD_DIR}/system.properties ]; then
  cp ${CACHE_DIR}/system.properties ${BUILD_DIR}/system.properties
fi

if [ ! -d $CACHE_DIR ]; then
  LOGGER_FLAGS="$LOGGER_FLAGS new_java_app"
  logger -p user.notice -t "slugc[$$]" "language_pack_java new_java_app"
  if [ ! -f ${BUILD_DIR}/system.properties ]; then
    echo "java.runtime.version=1.6" > ${BUILD_DIR}/system.properties;
  fi
fi

#create the cache dir if it doesn't exist
mkdir -p $CACHE_DIR

# install JDK
if [ -f ${BUILD_DIR}/system.properties ]; then
  logger -p user.notice -t "slugc[$$]" "language_pack_java download_jdk"
  LOGGER_FLAGS="$LOGGER_FLAGS download_jdk"
  javaVersion=$(detect_java_version ${BUILD_DIR})
  echo -n "-----> Installing OpenJDK ${javaVersion}..."
  install_java ${BUILD_DIR} ${javaVersion}
  jdk_overlay ${BUILD_DIR}
  echo "done"
  cp ${BUILD_DIR}/system.properties ${CACHE_DIR}/
fi



echo "-----> Installing Redline"
REDLINE_VERSION="ce4112c"
REDLINE_URL="https://heroku-buildpack-redline.s3.amazonaws.com/redline-$REDLINE_VERSION.tgz"
cd $CACHE_DIR
mkdir -p .redline
cd .redline
curl --silent --max-time 60 -O --location $REDLINE_URL --fail || error "Failed to download $REDLINE_VERSION"
tar -xf redline-$REDLINE_VERSION.tgz
echo -n `pwd`
echo -n `ls -la`



